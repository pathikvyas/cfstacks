---
AWSTemplateFormatVersion: "2010-09-09"
Description: "This is cloudformation example1"
Mappings:
  SubnetConfig:
    VPC:
      CIDR: "10.50.0.0/16"
    Subnet1:
      CIDR: "10.50.1.0/24"
    Subnet2:
      CIDR: "10.50.2.0/24"
    Subnet3:
      CIDR: "10.50.3.0/24"
Resources: 
  WebAppInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-04ad2567c9e3d7893
      InstanceType: t2.micro
      KeyName: MyKeyPair
      SecurityGroupIds:
        - !Ref WebAppSecurityGroup
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["-", [webapp-security-group, dev]]
      GroupDescription: "Allow HTTP/HTTPS and SSH inbound and outbound traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  CFVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      CidrBlock: !FindInMap [SubnetConfig, VPC, CIDR]
      Tags:  
        - Key: Name
          Value: CFMyVPC
  CFSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '' ]
      CidrBlock: !FindInMap [SubnetConfig, Subnet1, CIDR]
      VpcId: !Ref CFVPC
      Tags:
        - Key: Name
          Value: my-pub-subnet1
  CFSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '' ]
      CidrBlock: !FindInMap [SubnetConfig, Subnet2, CIDR]
      VpcId: !Ref CFVPC
      Tags:
        - Key: Name
          Value: my-pri-subnet1
  myRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref CFVPC
      Tags:
        - Key: Name
          Value: Web
  myRoute:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: myRouteTable
      SubnetId:
        Ref: CFSubnetA

  # myCarrierRoute:
  #   Type: AWS::EC2::Route
  #   DependsOn: GatewayToInternetAndCarrierNetwork
  #   Properties:
  #      RouteTableId:
  #        Ref: myRouteTable
  #      DestinationCidrBlock: 0.0.0.0/0
  #      GatewayId:
  #        Ref: myCarrierGateway

Outputs:
  CFVPCID:
    Description: "The VPC ID of CFVPC"
    Value: !Ref CFVPC
    Export:
      Name: !Sub "${AWS::StackName}-CFVPC-ID"
  SubnetAID:
    Description: "The subnet ID of SubnetA"
    Value: !Ref CFSubnetA
    Export:
      Name: !Sub "${AWS::StackName}-my-pub-subnet-ID"
  SubnetBID:
    Description: "The subnet ID of SubnetB"
    Value: !Ref CFSubnetB
    Export:
      Name: !Sub "${AWS::StackName}-my-pri-subnet-ID"